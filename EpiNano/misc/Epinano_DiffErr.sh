#!/usr/bin/env bash 

usage="$(basename "$0") [-h] [-x sample1] [-y sampl2] [-p plots] [-m label] [-q true|false] [-c coverage] [-t threshold]"
	 
if [[ "$#" -eq 0 ]]; then
	echo "$usage"
	exit 0 
fi

quality=0 
threshold=5
cov=30

while getopts ":hx:y:p:qm:c:t:" option; do 
	case $option in
		h)
		echo -e "
		Usage:
		$usage \n 
		-x sample1.per_site_var.csv generated by Epinano_Variants.py 
		-y sample2.per_site_var.csv generated by Epinano_Variants.py 
		-p types of plots. 'c': scatter-plot; 'b': bar-plot
		-m '1': label outliers; '0': no labelling;  
		-t threshold: this detrmines the threshold (threshold * sd) used to determine (Ordinary Least Squares regression [OLS]) outliers/candidates of mdification sites; default: 5
		-c minimum depth; default: 30
		-q true or false; i.e., whether to include quality scores to compute summed errors

		example1: sh  Epinano_Err.sh -x ko1.plus_strand.per.site.var.csv -y wt1.plus_strand.per.site.var.csv -p c -m 0  -c 30 -t 5 
		example2: sh  Epinano_Err.sh -x ko1.plus_strand.per.site.var.csv -y wt1.plus_strand.per.site.var.csv -p c -m 0  -c 30 -t 5 -q 

		It will do comparisons using 'mis', 'ins' and del between two samples. 
		It will also sum up 'mis', 'ins', 'del' and even 'quality' and use the _summedError feature to compare two samples.
		In the meanwhile, scatter-/bar- plots can be generated to show the ideitified outliers/candidates. 
		"
		exit ;; 
		
		x) samplex=${OPTARG} ;;
		y) sampley=${OPTARG} ;;
		p) plot=${OPTARG} ;;
		m) mark=${OPTARG} ;;
		c) cov=${OPTARG} ;;
		t) threshold=${OPTARG} ;;
		q) quality=true ;;
			
		:) printf "missing argument for -%s\n" "$OPTARG" >&2
		   printf "$usage" >&2
		   exit 1	;;
		
		\?) #incorrect option
		echo "Error: invalid option: -%s\n" "$OPTARG" >&2
		exit 1 ;;
	esac
done

src_dir=$(dirname "$0")
label1=${samplex/.**}
label2=${sampley/.**}

plot_type=''

if [[ ${plot}=="b" ]];then
	plot_type="barplot"
else 
	plot_type='scatter_plot'
fi 

echo "CMD: Rscript ${src_dir}/misc/Epinano_DiffErr.R -k ${samplex} -w ${sampley} -x ${label1} -y ${label2} -s mis -o ${label1}_${label2} -l ${mark} -p ${plot} -c ${cov} -t ${threshold} "

Rscript ${src_dir}/misc/Epinano_DiffErr.R -k ${samplex} -w ${sampley} -x ${label1} -y ${label2} -s mis -o ${label1}_${label2}_mismatches -l ${mark} -p ${plot} -c ${cov} -t ${threshold} 
wait

echo "CMD: Rscript ${src_dir}/misc/Epinano_DiffErr.R -k ${samplex} -w ${sampley} -x ${label1} -y ${label2} -s ins -o ${label1}_${label2} -l ${mark} -p ${plot} -c ${cov} -t ${threshold}"
Rscript ${src_dir}/misc/Epinano_DiffErr.R -k ${samplex} -w ${sampley} -x ${label1} -y ${label2} -s ins -o ${label1}_${label2}_insertion -l ${mark} -p ${plot} -c ${cov} -t ${threshold}
wait

echo "CMD: Rscript ${src_dir}/misc/Epinano_DiffErr.R -k ${samplex} -w ${sampley} -x ${label1} -y ${label2} -s del -o ${label1}_${label2} -l ${mark} -p ${plot} -c ${cov} -t ${threshold}"
Rscript ${src_dir}/misc/Epinano_DiffErr.R -k ${samplex} -w ${sampley} -x ${label1} -y ${label2} -s del -o ${label1}_${label2}_deletion -l ${mark} -p ${plot} -c ${cov} -t ${threshold}
wait

if [[ "$quality" != true  ]]; then 
	echo "compute sum_err using ins, mis, and del"
	echo "python ${src_dir}/misc/Epinano_sumErr.py --file ${samplex} --kmer 0 --out ${label1}.sumErr" 
	python ${src_dir}/misc/Epinano_sumErr.py --file ${samplex} --kmer 0 --out ${label1}.sumErr
	wait 
	echo "python ${src_dir}/misc/Epinano_sumErr.py --file ${sampley} --kmer 0 --out ${label2}.sumErr "
	python ${src_dir}/misc/Epinano_sumErr.py --file ${sampley} --kmer 0 --out ${label2}.sumErr
else
	echo "compute sum_err using ins, mis, del and quality"
	echo "python ${src_dir}/misc/Epinano_sumErr.py --file ${samplex} --kmer 0 --out ${label1}.sumErr --quality "
	python ${src_dir}/misc/Epinano_sumErr.py --file ${samplex} --kmer 0 --out ${label1}.sumErr --quality
	wait 
	echo "python ${src_dir}/misc/Epinano_sumErr.py --file ${sampley} --kmer 0 --out ${label2}.sumErr --quality "
	python ${src_dir}/misc/Epinano_sumErr.py --file ${sampley} --kmer 0 --out ${label2}.sumErr --quality 
fi 

wait 
echo "CMD: Rscript ${src_dir}/misc/Epinano_DiffErr.R -k ${label1}.sumErr -w ${label2}.sumErr -x ${label1} -y ${label2} -s sum_err -o ${label1}_${label2} -l ${mark} -p ${plot} -c ${cov} -t ${threshold} "
Rscript ${src_dir}/misc/Epinano_DiffErr.R -k ${label1}.sumErr -w ${label2}.sumErr -x ${label1} -y ${label2} -s sum_err -o ${label1}_${label2}_summedError -l ${mark} -p ${plot} -c ${cov} -t ${threshold} 
wait 

#echo "compute delta-values between contrasts"








